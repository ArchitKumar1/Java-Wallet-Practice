apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'application'


group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.13.0/jmx_prometheus_javaagent-0.13.0.jar"
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compile 'redis.clients:jedis:2.9.0'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile 'org.hibernate:hibernate-core:5.5.3.Final'
    compile 'com.vaadin.external.google:android-json:0.0.20131108.vaadin1'
    compile group: 'org.nanohttpd', name: 'nanohttpd', version: '2.3.1'
    compile 'org.slf4j:slf4j-api:1.7.28'
    compile 'org.slf4j:slf4j-simple:1.7.28'

    testCompile "junit:junit:4.12"
    testCompile "org.junit.vintage:junit-vintage-engine:4.12.0-M4"
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.8.47'
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '1.7.4'
    testCompile "org.powermock:powermock-module-junit4:1.6.4"

    compile group: 'io.prometheus', name: 'simpleclient', version: '0.1.0'
}


task fatJar(type: Jar) {
    baseName = project.name + '-all'
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'com.application.Main'
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it :
                    zipTree(it)
        }
    }
    with jar
}

ext {
    javaMainClass = 'com.application.Main'
}
task runWithExecJarExecutable(type: Exec) {
    dependsOn fatJar
    group = 'Execution'
    description = 'Run the main jar of the project'
    commandLine "java", "-classpath", fatJar.archiveFile.get(), javaMainClass
}

abstract class GreetingTask extends DefaultTask {
    @TaskAction
    def greet() {
        println 'hello from GreetingTask'
    }
}

abstract class RunProjectTask extends DefaultTask {
    @TaskAction
    def runProject() {
        println 'hello from RunProjectTask'
    }
}
// Create a task using the task type
tasks.register('hello', GreetingTask)
tasks.register('runProject', RunProjectTask)

