plugins {
    id "com.google.protobuf" version "0.8.13"
    id "java"
    id "java-library"
    id "application"
}

group 'org.example'
version '1.0-SNAPSHOT'

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'redis.clients:jedis:2.9.0'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    implementation 'org.hibernate:hibernate-core:5.5.3.Final'
    implementation 'com.vaadin.external.google:android-json:0.0.20131108.vaadin1'
    implementation group: 'org.nanohttpd', name: 'nanohttpd', version: '2.3.1'
    implementation 'org.slf4j:slf4j-api:1.7.28'
    implementation 'org.slf4j:slf4j-simple:1.7.28'

    testImplementation "junit:junit:4.12"
    testImplementation "org.junit.vintage:junit-vintage-engine:4.12.0-M4"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '1.7.4'
    testImplementation "org.powermock:powermock-module-junit4:1.6.4"

    implementation group: 'io.prometheus', name: 'simpleclient_guava', version: '0.2.0'
    implementation group: 'io.prometheus', name: 'simpleclient', version: '0.1.0'
    implementation group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.1.0'
    implementation group: 'io.prometheus', name: 'simpleclient_httpserver', version: '0.1.0'
    implementation group: 'io.prometheus', name: 'simpleclient_pushgateway', version: '0.1.0'
    implementation group: 'com.newrelic.agent.java', name: 'newrelic-api', version: '7.1.1'
    implementation group: 'io.grpc', name: 'grpc-all', version: '1.19.0'
    implementation 'org.hibernate:hibernate-core:4.3.6.Final'
    implementation 'javax.servlet:javax.servlet-api:3.1.0'
    implementation 'org.slf4j:slf4j-simple:1.7.7'
    implementation 'org.javassist:javassist:3.15.0-GA'
    implementation 'mysql:mysql-connector-java:5.1.31'
    implementation(group: 'org.apache.kafka', name: 'kafka-clients', version: '2.2.1')
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

//    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
//    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.1'
//    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.11.1'
//
//    // https://mvnrepository.com/artifact/io.grpc/grpc-all
//    compile group: 'io.grpc', name: 'grpc-all', version: '1.26.0'
//
//    // https://mvnrepository.com/artifact/io.grpc/grpc-services
//    compile group: 'io.grpc', name: 'grpc-services', version: '1.28.0'
//
//    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
//    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
}


task fatJar(type: Jar) {
    archiveBaseName = project.name + '-all'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': archiveVersion,
                'Main-Class': 'com.application.Main'
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it :
                    zipTree(it)
        }
    }
    with jar
}

ext {
    javaMainClass = 'com.application.Main'
}
task runWithExecJarExecutable(type: Exec) {
    dependsOn fatJar
    group = 'Execution'
    description = 'Run the main jar of the project'
    commandLine "java", "-classpath", fatJar.archiveFile.get(), javaMainClass
}

abstract class GreetingTask extends DefaultTask {
    @TaskAction
    def greet() {
        println 'hello from GreetingTask'
    }
}

abstract class RunProjectTask extends DefaultTask {
    @TaskAction
    def runProject() {
        println 'hello from RunProjectTask'
    }
}
// Create a task using the task type
tasks.register('hello', GreetingTask)
tasks.register('runProject', RunProjectTask)


// Uncomment to create proto files.

sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
//            srcDir 'proto'
//            // In addition to the default '**/*.proto' (use with caution).
//            // Using an extension other than 'proto' is NOT recommended,
//            // because when proto files are published along with class files, we can
//            // only tell the type of a file from its extension.
//            include '**/*.protodevel'
        }
    }
}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.7.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.19.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}